{
  "service": {
    "service": "spring-cloud-function-aws-sample",
    "serviceObject": {
      "name": "spring-cloud-function-aws-sample"
    },
    "provider": {
      "name": "aws",
      "runtime": "java11",
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "TestLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/spring-cloud-function-aws-sample-dev-test"
            }
          },
          "FindAllCustomerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/spring-cloud-function-aws-sample-dev-findAllCustomer"
            }
          },
          "FindCustomerByIdLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/spring-cloud-function-aws-sample-dev-findCustomerById"
            }
          },
          "CreateCustomerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/spring-cloud-function-aws-sample-dev-createCustomer"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "spring-cloud-function-aws-sample",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/spring-cloud-function-aws-sample-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/spring-cloud-function-aws-sample-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "spring-cloud-function-aws-sample",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "TestLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/spring-cloud-function-aws-sample/dev/1669470890686-2022-11-26T13:54:50.686Z/spring-cloud-function-aws-sample-0.0.1-SNAPSHOT.jar"
              },
              "Handler": "io.lhysin.function.handler.AwsLambdaHandler",
              "Runtime": "java11",
              "FunctionName": "spring-cloud-function-aws-sample-dev-test",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "TestLogGroup"
            ]
          },
          "FindAllCustomerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/spring-cloud-function-aws-sample/dev/1669470890686-2022-11-26T13:54:50.686Z/spring-cloud-function-aws-sample-0.0.1-SNAPSHOT.jar"
              },
              "Handler": "io.lhysin.function.handler.AwsLambdaHandler",
              "Runtime": "java11",
              "FunctionName": "spring-cloud-function-aws-sample-dev-findAllCustomer",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "FindAllCustomerLogGroup"
            ]
          },
          "FindCustomerByIdLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/spring-cloud-function-aws-sample/dev/1669470890686-2022-11-26T13:54:50.686Z/spring-cloud-function-aws-sample-0.0.1-SNAPSHOT.jar"
              },
              "Handler": "io.lhysin.function.handler.AwsLambdaHandler",
              "Runtime": "java11",
              "FunctionName": "spring-cloud-function-aws-sample-dev-findCustomerById",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "FindCustomerByIdLogGroup"
            ]
          },
          "CreateCustomerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/spring-cloud-function-aws-sample/dev/1669470890686-2022-11-26T13:54:50.686Z/spring-cloud-function-aws-sample-0.0.1-SNAPSHOT.jar"
              },
              "Handler": "io.lhysin.function.handler.AwsLambdaHandler",
              "Runtime": "java11",
              "FunctionName": "spring-cloud-function-aws-sample-dev-createCustomer",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateCustomerLogGroup"
            ]
          },
          "TestLambdaVersion3wOgS3avGpI9758qKFh5TMz1aALPAoojN88699yET8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TestLambdaFunction"
              },
              "CodeSha256": "dzsx971ZzQ1wlY7abqGl4J2mhbLffN+pJQOCifc1gpM="
            }
          },
          "FindAllCustomerLambdaVersiondrpfhLxDu7QLMCFCqUJR910YEfQKrMw4FXQ161oAEnc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FindAllCustomerLambdaFunction"
              },
              "CodeSha256": "dzsx971ZzQ1wlY7abqGl4J2mhbLffN+pJQOCifc1gpM="
            }
          },
          "FindCustomerByIdLambdaVersionL05hy2nskxqxWVEeVde7Nyipb1uvgqqcotPhju1t98": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FindCustomerByIdLambdaFunction"
              },
              "CodeSha256": "dzsx971ZzQ1wlY7abqGl4J2mhbLffN+pJQOCifc1gpM="
            }
          },
          "CreateCustomerLambdaVersionPwFJBB7AFTe8AM9kIx6RHD2R7oMf5tSNeWBQtrtBJU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateCustomerLambdaFunction"
              },
              "CodeSha256": "dzsx971ZzQ1wlY7abqGl4J2mhbLffN+pJQOCifc1gpM="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-spring-cloud-function-aws-sample",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceV1": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "v1",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1Test": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1"
              },
              "PathPart": "test",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1Customers": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1"
              },
              "PathPart": "customers",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceV1Customer": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceV1"
              },
              "PathPart": "customer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodV1TestGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Test"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "TestLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "TestLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodV1CustomersGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Customers"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FindAllCustomerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FindAllCustomerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodV1CustomerGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Customer"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FindCustomerByIdLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FindCustomerByIdLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodV1CustomerPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceV1Customer"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateCustomerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateCustomerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1669470889910": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodV1TestGet",
              "ApiGatewayMethodV1CustomersGet",
              "ApiGatewayMethodV1CustomerGet",
              "ApiGatewayMethodV1CustomerPost"
            ]
          },
          "TestLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "TestLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FindAllCustomerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FindAllCustomerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FindCustomerByIdLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FindCustomerByIdLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateCustomerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateCustomerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-spring-cloud-function-aws-sample-dev-ServerlessDeploymentBucketName"
            }
          },
          "TestLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TestLambdaVersion3wOgS3avGpI9758qKFh5TMz1aALPAoojN88699yET8"
            },
            "Export": {
              "Name": "sls-spring-cloud-function-aws-sample-dev-TestLambdaFunctionQualifiedArn"
            }
          },
          "FindAllCustomerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FindAllCustomerLambdaVersiondrpfhLxDu7QLMCFCqUJR910YEfQKrMw4FXQ161oAEnc"
            },
            "Export": {
              "Name": "sls-spring-cloud-function-aws-sample-dev-FindAllCustomerLambdaFunctionQualifiedArn"
            }
          },
          "FindCustomerByIdLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FindCustomerByIdLambdaVersionL05hy2nskxqxWVEeVde7Nyipb1uvgqqcotPhju1t98"
            },
            "Export": {
              "Name": "sls-spring-cloud-function-aws-sample-dev-FindCustomerByIdLambdaFunctionQualifiedArn"
            }
          },
          "CreateCustomerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateCustomerLambdaVersionPwFJBB7AFTe8AM9kIx6RHD2R7oMf5tSNeWBQtrtBJU"
            },
            "Export": {
              "Name": "sls-spring-cloud-function-aws-sample-dev-CreateCustomerLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-spring-cloud-function-aws-sample-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "test": {
        "handler": "io.lhysin.function.handler.AwsLambdaHandler",
        "events": [
          {
            "http": {
              "path": "v1/test",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "spring-cloud-function-aws-sample-dev-test",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java11",
        "vpc": {},
        "versionLogicalId": "TestLambdaVersion3wOgS3avGpI9758qKFh5TMz1aALPAoojN88699yET8"
      },
      "findAllCustomer": {
        "handler": "io.lhysin.function.handler.AwsLambdaHandler",
        "events": [
          {
            "http": {
              "path": "v1/customers",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "spring-cloud-function-aws-sample-dev-findAllCustomer",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java11",
        "vpc": {},
        "versionLogicalId": "FindAllCustomerLambdaVersiondrpfhLxDu7QLMCFCqUJR910YEfQKrMw4FXQ161oAEnc"
      },
      "findCustomerById": {
        "handler": "io.lhysin.function.handler.AwsLambdaHandler",
        "events": [
          {
            "http": {
              "path": "v1/customer",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "spring-cloud-function-aws-sample-dev-findCustomerById",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java11",
        "vpc": {},
        "versionLogicalId": "FindCustomerByIdLambdaVersionL05hy2nskxqxWVEeVde7Nyipb1uvgqqcotPhju1t98"
      },
      "createCustomer": {
        "handler": "io.lhysin.function.handler.AwsLambdaHandler",
        "events": [
          {
            "http": {
              "path": "v1/customer",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "spring-cloud-function-aws-sample-dev-createCustomer",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "java11",
        "vpc": {},
        "versionLogicalId": "CreateCustomerLambdaVersionPwFJBB7AFTe8AM9kIx6RHD2R7oMf5tSNeWBQtrtBJU"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "spring-cloud-function-aws-sample",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "artifact": "target/spring-cloud-function-aws-sample-0.0.1-SNAPSHOT.jar",
        "artifactsS3KeyDirname": "serverless/spring-cloud-function-aws-sample/dev/code-artifacts",
        "artifactDirectoryName": "serverless/spring-cloud-function-aws-sample/dev/1669470890686-2022-11-26T13:54:50.686Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/spring-cloud-function-aws-sample/dev/1669470890686-2022-11-26T13:54:50.686Z",
    "artifact": "spring-cloud-function-aws-sample-0.0.1-SNAPSHOT.jar"
  }
}